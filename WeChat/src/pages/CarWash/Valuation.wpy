<style>
.success {
  margin-top: -3px!important
}

.success div img {
  padding-bottom: 9px!important
}
</style>
<style lang="stylus" scoped>
@import '../../styles/_variables'
.container
  overflow hidden
.below__box
  padding-top 45px
  display flex
  flex-direction column
  align-items center
  min-height 500px
  [class^='label-']
    font-size h = 18px
    line-height h
  .label-1
    color color-yellow
  .label-2
    margin-top 21px
  .count-down
    font-size h = 50px
    line-height h
    margin-top 12px
    +div
     color deault-placeholder-color
     margin-top 5px
  .operational-zone
    width 73%
    display flex
    justify-content space-around
    margin-top 8px
    .navigator
      display flex
      flex-direction column
      align-items center
      font-size 12px
      color deault-placeholder-color
      padding 13px
      img
        width w = 21px
        height w
        margin-bottom 3px
</style>
<template lang="pug">
  section(class='container')
    Scroller(ref="myScroller" lock-x scrollbar-y)
      XHeader(class='above__box')
      div(class='below__box')
        div(class='label-1') 支付成功后设备将自动开启
        div(class='label-2') No.{{ DeviceSerial }}设备已经解锁
        template(v-if='countDown > 0')
          div(class='count-down') {{ _countDown }}
          div (剩余洗车时间)
        success(:class='{ success: countDown <= 0 }', v-else)
          div(slot='prompt-1') 洗车完成
          div(slot='prompt-2')
        div(class='operational-zone', :class='{ success: countDown <= 0 }',)
          router-link(class='navigator', :to="{ name: 'CarWash__FaultSubmit' }")
            img(src='../../assets/Caryu-gzbx-icon@2x.png')
            span 故障申报
          //- router-link(class='navigator', :to="{ name: 'CarWash' }")
            img(src='../../assets/Caryu-jsxc-icon@2x.png')
            span 结束洗车
</template>

<script>
import { mapState, mapActions } from 'vuex'
import { Scroller } from 'vux'
import { NumberPatch } from '@/utils'
import XHeader from '@/components/x-header'
import { Success } from '@/components'

export default {
  name: 'CarWash__Valuation',

  components: { Scroller, XHeader, Success },

  data() {
    return {
      countDown: 0, // 剩余时间(秒)
      timer: null
    }
  },

  computed: {
    ...mapState(['openid']),
    ...mapState('CarWashData', ['DeviceSerial', 'orderid']),
    _countDown() {
      let minute = this.countDown / 60
      let second = this.countDown % 60
      if (minute > 60)
        minute = parseInt(minute % 60)
      return NumberPatch(minute, 2) + ':' + NumberPatch(second, 2)
    }
  },

  beforeRouteLeave(to, from, next) {
    clearInterval(this.timer)
    next()
  },

  methods: {
    ...mapActions('CarWashData', ['getOrderStatus']),
    diff(countDown) {
      this.countDown = countDown
      this.timer = setInterval(() => {
        this.countDown--
        if (this.countDown <= 0) {
          clearInterval(this.timer)
          // this.$router.replace({ name: 'CarWash' })
        }
      }, 1000)
    },
    init() {
      let params = this.$route.params
      if (params.costTime) {
        this.diff(params.costTime)
      } else {
        this.getOrderStatus(this.openid)
          .then(({ status, data: { time_left } }) => {
            if (status) {
              this.diff(time_left)
            } else {
              this.countDown = 0
            }
          })
      }
    }
  },

  created() {
    this.init()
  }
}
</script>
